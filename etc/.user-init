; .user-init

(set 'mac-option-modifier 'super)
(set 'mac-command-modifier 'meta)
(set 'org-agenda-files '("~/mind/freedom_as_autonomy/activity.org"))

; coding-system
(prefer-coding-system 'chinese-gbk-dos)
(prefer-coding-system 'utf-8-unix)
(defun gbk ()
  "revert buffer coding to chinese-gbk"
  (interactive)
  (revert-buffer-with-coding-system 'chinese-gbk-dos))

; fcitx
(global-set-key (kbd "C-SPC") 'nil)

(with-eval-after-load 'evil
  (define-key evil-normal-state-map (kbd "M-.") nil)
  (define-key evil-normal-state-map (kbd "<tab>") 'c-indent-line-or-region)
  (define-key evil-normal-state-map (kbd "TAB") 'c-indent-line-or-region)
  (define-key evil-normal-state-map (kbd "C-i") 'evil-jump-forward)
  (define-key evil-normal-state-map (kbd "C-t") 'helm-gtags-pop-stack))

(with-eval-after-load 'gud
  (define-key evil-insert-state-map (kbd "C-p") 'comint-previous-input)
  (define-key evil-insert-state-map (kbd "C-n") 'comint-next-input))

(with-eval-after-load 'company
  (global-company-mode t)
  (define-key company-active-map (kbd "C-n") 'company-complete-common-or-cycle)
  (define-key company-active-map (kbd "C-p")
    (lambda ()
      (interactive)
      (company-complete-common-or-cycle -1))))

; smart-tabs-mode
(load-file "~/.smart-tabs-mode.el")
(smart-tabs-insinuate 'c 'c++ 'cperl 'python)

(defun yonz-mode ()
  "yonz mode"
  (set 'backward-delete-char-untabify-method 'hungry)
  (linum-mode)
  (hs-minor-mode)
  (set 'hs-hide-comments-when-hiding-all nil)
  (set 'hs-allow-nesting 1)
  (modify-syntax-entry ?_ "w")
  (set 'whitespace-style '(face tab-mark lines))
  (whitespace-mode)
  (ggtags-mode))

(defun yonz-c-mode ()
  "yonz c-mode"
  (set 'tab-width 4)
  (set 'indent-tabs-mode nil)
  (set 'c-default-style "linux")
  (set 'c-basic-offset 4)
  (yonz-mode))
(add-hook 'asm-mode-hook 'yonz-c-mode)
(add-hook 'c-mode-hook 'yonz-c-mode)
(add-hook 'c++-mode-hook 'yonz-c-mode)
(add-hook 'csharp-mode-hook 'yonz-c-mode)

(defun yonz-sh-mode ()
  "yonz sh-mode"
  (set 'tab-width 4)
  (set 'indent-tabs-mode nil)
  (set 'python-indent-offset 4)
  (yonz-mode))
(add-hook 'sh-mode-hook 'yonz-sh-mode)
(add-hook 'perl-mode-hook 'yonz-sh-mode)
(add-hook 'python-mode-hook 'yonz-sh-mode)
(add-hook 'java-mode-hook 'yonz-sh-mode)

(defun yonz-web-mode ()
  "yonz web-mode"
  (set 'web-mode-style-padding 2)
  (set 'web-mode-script-padding 2)
  (set 'web-mode-markup-indent-offset 2)
  (set 'web-mode-css-indent-offset 2)
  (set 'web-mode-code-indent-offset 2)
  (set 'js2-basic-offset 2)
  (set 'css-indent-offset 2)
  (set 'indent-tabs-mode nil)
  (yonz-mode))
(add-hook 'web-mode-hook 'yonz-web-mode)
(add-to-list 'auto-mode-alist '("\\.css\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.js\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.vue\\'" . web-mode))
(set 'web-mode-content-types-alist '(("jsx" . "\\.js[x]?\\'")))

;(provide '.user-init)
